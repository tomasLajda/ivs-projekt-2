Project went mostly according to plan with a few minor mistakes. 
Agile-style development with weekly meetings and frequent communication 
allowed for a steady workflow and good team morale.

Plan shortcomings: 
	- Not assigning the development of user and program documentation
	- Underestimating the difficulty of GUI and mathlib integration
	- Insufficient code review
	- 'Trello' tool was not needed
	- Code formatting agreement was changed for its lack of snake_case
	- Some work had to be redistributed due to development mistakes
		(mistakes such as underestimating development time estimates, 
		low quality code and the scarcity proper peer review)

Inaccurate chronological planning decisions:
	Underestimated
		- GUI
		- Math library
	Overestimated
		- Tests
		- Makefile
		- Profiling
	
Ratings of major libraries/tools used:
	- python - Good choice, team familiarity and confidence
	- pytest - Very easy to use, lacking functionality at times
	- tkinter - Proved difficult to package along with 'pillow'
	- snakewiz - Very easy to use, nothing to complain about
	- github - Reliable, yet easy to make a mistake
			 - In retrospect, a pull request based system would have worked better.
	- discord - Most used communication channel, amazing
